
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sun Aug 05 03:01:28 CEST 2018
//----------------------------------------------------

package rs.ac.bg.etf.pp1;

import java_cup.runtime.*;

/** CUP v0.10k generated parser.
  * @version Sun Aug 05 03:01:28 CEST 2018
  */
public class MJParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public MJParser() {super();}

  /** Constructor which sets the default scanner. */
  public MJParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\143\000\002\003\010\000\002\002\004\000\002\004" +
    "\003\000\002\005\004\000\002\005\002\000\002\006\003" +
    "\000\002\006\003\000\002\006\003\000\002\007\006\000" +
    "\002\010\005\000\002\010\003\000\002\011\005\000\002" +
    "\012\003\000\002\012\003\000\002\012\003\000\002\013" +
    "\005\000\002\014\004\000\002\014\003\000\002\015\003" +
    "\000\002\015\005\000\002\016\004\000\002\016\002\000" +
    "\002\017\011\000\002\020\003\000\002\021\004\000\002" +
    "\021\002\000\002\022\005\000\002\022\002\000\002\023" +
    "\004\000\002\023\002\000\002\024\013\000\002\025\003" +
    "\000\002\025\003\000\002\026\003\000\002\026\002\000" +
    "\002\027\005\000\002\027\003\000\002\030\004\000\002" +
    "\030\006\000\002\031\003\000\002\032\004\000\002\032" +
    "\002\000\002\033\004\000\002\033\010\000\002\033\011" +
    "\000\002\033\004\000\002\033\004\000\002\033\005\000" +
    "\002\033\007\000\002\033\010\000\002\033\005\000\002" +
    "\034\004\000\002\034\002\000\002\035\003\000\002\035" +
    "\002\000\002\036\004\000\002\036\002\000\002\037\005" +
    "\000\002\037\006\000\002\037\004\000\002\037\004\000" +
    "\002\040\005\000\002\040\006\000\002\040\003\000\002" +
    "\041\003\000\002\041\002\000\002\042\005\000\002\042" +
    "\003\000\002\043\005\000\002\043\003\000\002\044\005" +
    "\000\002\044\003\000\002\045\003\000\002\045\005\000" +
    "\002\046\003\000\002\046\004\000\002\047\005\000\002" +
    "\047\003\000\002\050\005\000\002\050\003\000\002\051" +
    "\003\000\002\051\006\000\002\051\003\000\002\051\003" +
    "\000\002\051\003\000\002\051\004\000\002\051\007\000" +
    "\002\051\005\000\002\052\003\000\002\052\003\000\002" +
    "\052\003\000\002\052\003\000\002\052\003\000\002\052" +
    "\003\000\002\053\003\000\002\053\003\000\002\054\003" +
    "\000\002\054\003\000\002\054\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\256\000\004\004\005\001\002\000\004\002\260\001" +
    "\002\000\004\057\007\001\002\000\012\006\ufffd\051\ufffd" +
    "\053\ufffd\057\ufffd\001\002\000\012\006\uffff\051\uffff\053" +
    "\uffff\057\uffff\001\002\000\012\006\020\051\012\053\021" +
    "\057\014\001\002\000\004\057\252\001\002\000\010\015" +
    "\uffe4\052\uffe4\057\uffe4\001\002\000\012\006\ufffe\051\ufffe" +
    "\053\ufffe\057\ufffe\001\002\000\052\022\uffda\023\uffda\024" +
    "\uffda\025\uffda\026\uffda\027\uffda\030\uffda\031\uffda\032\uffda" +
    "\033\uffda\034\uffda\035\uffda\036\uffda\042\uffda\043\uffda\046" +
    "\uffda\047\uffda\050\uffda\051\uffda\057\uffda\001\002\000\012" +
    "\006\ufffb\051\ufffb\053\ufffb\057\ufffb\001\002\000\012\006" +
    "\ufffa\051\ufffa\053\ufffa\057\ufffa\001\002\000\012\006\ufffc" +
    "\051\ufffc\053\ufffc\057\ufffc\001\002\000\004\057\037\001" +
    "\002\000\004\057\014\001\002\000\004\057\024\001\002" +
    "\000\006\042\034\043\033\001\002\000\004\037\026\001" +
    "\002\000\006\042\ufff7\043\ufff7\001\002\000\010\054\030" +
    "\055\032\056\031\001\002\000\006\042\ufff6\043\ufff6\001" +
    "\002\000\006\042\ufff5\043\ufff5\001\002\000\006\042\ufff3" +
    "\043\ufff3\001\002\000\006\042\ufff4\043\ufff4\001\002\000" +
    "\004\057\024\001\002\000\012\006\ufff9\051\ufff9\053\ufff9" +
    "\057\ufff9\001\002\000\006\042\ufff8\043\ufff8\001\002\000" +
    "\006\020\041\051\uffe8\001\002\000\006\020\uffea\051\uffea" +
    "\001\002\000\004\051\043\001\002\000\004\057\014\001" +
    "\002\000\004\051\uffe9\001\002\000\010\051\uffec\052\uffec" +
    "\057\uffec\001\002\000\010\051\045\052\uffe6\057\014\001" +
    "\002\000\010\015\uffe4\052\uffe4\057\uffe4\001\002\000\004" +
    "\052\050\001\002\000\010\051\uffed\052\uffed\057\uffed\001" +
    "\002\000\012\006\uffeb\051\uffeb\053\uffeb\057\uffeb\001\002" +
    "\000\010\015\055\052\053\057\014\001\002\000\004\057" +
    "\uffe2\001\002\000\004\052\uffe7\001\002\000\010\015\uffe5" +
    "\052\uffe5\057\uffe5\001\002\000\004\057\uffe1\001\002\000" +
    "\004\057\057\001\002\000\004\045\060\001\002\000\006" +
    "\046\uffdf\057\014\001\002\000\006\043\uffdd\046\uffdd\001" +
    "\002\000\004\057\244\001\002\000\004\046\067\001\002" +
    "\000\006\043\065\046\uffe0\001\002\000\004\057\014\001" +
    "\002\000\006\043\uffde\046\uffde\001\002\000\006\051\uffec" +
    "\057\uffec\001\002\000\006\051\071\057\014\001\002\000" +
    "\026\005\uffd8\010\uffd8\012\uffd8\013\uffd8\014\uffd8\016\uffd8" +
    "\021\uffd8\051\uffd8\052\uffd8\057\uffd8\001\002\000\026\005" +
    "\107\010\077\012\102\013\073\014\103\016\106\021\104" +
    "\051\074\052\105\057\075\001\002\000\004\045\240\001" +
    "\002\000\026\005\uffd8\010\uffd8\012\uffd8\013\uffd8\014\uffd8" +
    "\016\uffd8\021\uffd8\051\uffd8\052\uffd8\057\uffd8\001\002\000" +
    "\060\022\uffc2\023\uffc2\024\uffc2\025\uffc2\026\uffc2\027\uffc2" +
    "\030\uffc2\031\uffc2\032\uffc2\033\uffc2\034\uffc2\035\uffc2\036" +
    "\uffc2\037\uffc2\040\uffc2\041\uffc2\042\uffc2\043\uffc2\044\uffc2" +
    "\045\uffc2\046\uffc2\047\uffc2\050\uffc2\001\002\000\016\037" +
    "\232\040\227\041\230\044\156\045\231\047\154\001\002" +
    "\000\004\045\220\001\002\000\004\042\217\001\002\000" +
    "\026\005\uffd9\010\uffd9\012\uffd9\013\uffd9\014\uffd9\016\uffd9" +
    "\021\uffd9\051\uffd9\052\uffd9\057\uffd9\001\002\000\004\045" +
    "\210\001\002\000\022\011\117\023\124\042\uffcb\045\130" +
    "\054\114\055\131\056\115\057\075\001\002\000\004\042" +
    "\204\001\002\000\010\015\uffe3\052\uffe3\057\uffe3\001\002" +
    "\000\024\005\107\010\077\012\102\013\073\014\103\016" +
    "\106\021\104\051\074\057\075\001\002\000\004\042\110" +
    "\001\002\000\032\005\uffd4\007\uffd4\010\uffd4\012\uffd4\013" +
    "\uffd4\014\uffd4\016\uffd4\017\uffd4\021\uffd4\051\uffd4\052\uffd4" +
    "\057\uffd4\001\002\000\004\017\112\001\002\000\004\045" +
    "\113\001\002\000\020\011\117\023\124\045\130\054\114" +
    "\055\131\056\115\057\075\001\002\000\044\022\uffaf\023" +
    "\uffaf\024\uffaf\025\uffaf\026\uffaf\027\uffaf\030\uffaf\031\uffaf" +
    "\032\uffaf\033\uffaf\034\uffaf\035\uffaf\036\uffaf\042\uffaf\043" +
    "\uffaf\046\uffaf\050\uffaf\001\002\000\044\022\uffad\023\uffad" +
    "\024\uffad\025\uffad\026\uffad\027\uffad\030\uffad\031\uffad\032" +
    "\uffad\033\uffad\034\uffad\035\uffad\036\uffad\042\uffad\043\uffad" +
    "\046\uffad\050\uffad\001\002\000\024\027\174\030\200\031" +
    "\177\032\202\033\175\034\176\035\uffb9\036\uffb9\046\uffb9" +
    "\001\002\000\004\057\014\001\002\000\036\022\145\023" +
    "\144\027\uffb7\030\uffb7\031\uffb7\032\uffb7\033\uffb7\034\uffb7" +
    "\035\uffb7\036\uffb7\042\uffb7\043\uffb7\046\uffb7\050\uffb7\001" +
    "\002\000\052\022\uffb1\023\uffb1\024\uffb1\025\uffb1\026\uffb1" +
    "\027\uffb1\030\uffb1\031\uffb1\032\uffb1\033\uffb1\034\uffb1\035" +
    "\uffb1\036\uffb1\042\uffb1\043\uffb1\044\156\045\155\046\uffb1" +
    "\047\154\050\uffb1\001\002\000\006\036\151\046\150\001" +
    "\002\000\010\035\uffba\036\uffba\046\uffba\001\002\000\016" +
    "\011\117\045\130\054\114\055\131\056\115\057\075\001" +
    "\002\000\044\022\uffb4\023\uffb4\024\137\025\140\026\136" +
    "\027\uffb4\030\uffb4\031\uffb4\032\uffb4\033\uffb4\034\uffb4\035" +
    "\uffb4\036\uffb4\042\uffb4\043\uffb4\046\uffb4\050\uffb4\001\002" +
    "\000\044\022\uffb2\023\uffb2\024\uffb2\025\uffb2\026\uffb2\027" +
    "\uffb2\030\uffb2\031\uffb2\032\uffb2\033\uffb2\034\uffb2\035\uffb2" +
    "\036\uffb2\042\uffb2\043\uffb2\046\uffb2\050\uffb2\001\002\000" +
    "\010\035\134\036\uffbc\046\uffbc\001\002\000\020\011\117" +
    "\023\124\045\130\054\114\055\131\056\115\057\075\001" +
    "\002\000\044\022\uffae\023\uffae\024\uffae\025\uffae\026\uffae" +
    "\027\uffae\030\uffae\031\uffae\032\uffae\033\uffae\034\uffae\035" +
    "\uffae\036\uffae\042\uffae\043\uffae\046\uffae\050\uffae\001\002" +
    "\000\004\046\133\001\002\000\044\022\uffaa\023\uffaa\024" +
    "\uffaa\025\uffaa\026\uffaa\027\uffaa\030\uffaa\031\uffaa\032\uffaa" +
    "\033\uffaa\034\uffaa\035\uffaa\036\uffaa\042\uffaa\043\uffaa\046" +
    "\uffaa\050\uffaa\001\002\000\020\011\117\023\124\045\130" +
    "\054\114\055\131\056\115\057\075\001\002\000\010\035" +
    "\uffbb\036\uffbb\046\uffbb\001\002\000\016\011\uff9f\045\uff9f" +
    "\054\uff9f\055\uff9f\056\uff9f\057\uff9f\001\002\000\016\011" +
    "\uffa1\045\uffa1\054\uffa1\055\uffa1\056\uffa1\057\uffa1\001\002" +
    "\000\016\011\uffa0\045\uffa0\054\uffa0\055\uffa0\056\uffa0\057" +
    "\uffa0\001\002\000\016\011\117\045\130\054\114\055\131" +
    "\056\115\057\075\001\002\000\044\022\uffb3\023\uffb3\024" +
    "\uffb3\025\uffb3\026\uffb3\027\uffb3\030\uffb3\031\uffb3\032\uffb3" +
    "\033\uffb3\034\uffb3\035\uffb3\036\uffb3\042\uffb3\043\uffb3\046" +
    "\uffb3\050\uffb3\001\002\000\036\022\145\023\144\027\uffb6" +
    "\030\uffb6\031\uffb6\032\uffb6\033\uffb6\034\uffb6\035\uffb6\036" +
    "\uffb6\042\uffb6\043\uffb6\046\uffb6\050\uffb6\001\002\000\016" +
    "\011\uffa2\045\uffa2\054\uffa2\055\uffa2\056\uffa2\057\uffa2\001" +
    "\002\000\016\011\uffa3\045\uffa3\054\uffa3\055\uffa3\056\uffa3" +
    "\057\uffa3\001\002\000\016\011\117\045\130\054\114\055" +
    "\131\056\115\057\075\001\002\000\044\022\uffb5\023\uffb5" +
    "\024\137\025\140\026\136\027\uffb5\030\uffb5\031\uffb5\032" +
    "\uffb5\033\uffb5\034\uffb5\035\uffb5\036\uffb5\042\uffb5\043\uffb5" +
    "\046\uffb5\050\uffb5\001\002\000\004\042\153\001\002\000" +
    "\020\011\117\023\124\045\130\054\114\055\131\056\115" +
    "\057\075\001\002\000\010\035\134\036\uffbd\046\uffbd\001" +
    "\002\000\032\005\uffd5\007\uffd5\010\uffd5\012\uffd5\013\uffd5" +
    "\014\uffd5\016\uffd5\017\uffd5\021\uffd5\051\uffd5\052\uffd5\057" +
    "\uffd5\001\002\000\020\011\117\023\124\045\130\054\114" +
    "\055\131\056\115\057\075\001\002\000\022\011\117\023" +
    "\124\045\130\046\uffc0\054\114\055\131\056\115\057\075" +
    "\001\002\000\004\057\157\001\002\000\060\022\uffc4\023" +
    "\uffc4\024\uffc4\025\uffc4\026\uffc4\027\uffc4\030\uffc4\031\uffc4" +
    "\032\uffc4\033\uffc4\034\uffc4\035\uffc4\036\uffc4\037\uffc4\040" +
    "\uffc4\041\uffc4\042\uffc4\043\uffc4\044\uffc4\045\uffc4\046\uffc4" +
    "\047\uffc4\050\uffc4\001\002\000\006\043\164\046\uffc1\001" +
    "\002\000\004\046\163\001\002\000\006\043\uffbe\046\uffbe" +
    "\001\002\000\044\022\uffb0\023\uffb0\024\uffb0\025\uffb0\026" +
    "\uffb0\027\uffb0\030\uffb0\031\uffb0\032\uffb0\033\uffb0\034\uffb0" +
    "\035\uffb0\036\uffb0\042\uffb0\043\uffb0\046\uffb0\050\uffb0\001" +
    "\002\000\020\011\117\023\124\045\130\054\114\055\131" +
    "\056\115\057\075\001\002\000\006\043\uffbf\046\uffbf\001" +
    "\002\000\004\050\167\001\002\000\060\022\uffc3\023\uffc3" +
    "\024\uffc3\025\uffc3\026\uffc3\027\uffc3\030\uffc3\031\uffc3\032" +
    "\uffc3\033\uffc3\034\uffc3\035\uffc3\036\uffc3\037\uffc3\040\uffc3" +
    "\041\uffc3\042\uffc3\043\uffc3\044\uffc3\045\uffc3\046\uffc3\047" +
    "\uffc3\050\uffc3\001\002\000\046\022\uffac\023\uffac\024\uffac" +
    "\025\uffac\026\uffac\027\uffac\030\uffac\031\uffac\032\uffac\033" +
    "\uffac\034\uffac\035\uffac\036\uffac\042\uffac\043\uffac\046\uffac" +
    "\047\171\050\uffac\001\002\000\020\011\117\023\124\045" +
    "\130\054\114\055\131\056\115\057\075\001\002\000\004" +
    "\050\173\001\002\000\044\022\uffab\023\uffab\024\uffab\025" +
    "\uffab\026\uffab\027\uffab\030\uffab\031\uffab\032\uffab\033\uffab" +
    "\034\uffab\035\uffab\036\uffab\042\uffab\043\uffab\046\uffab\050" +
    "\uffab\001\002\000\020\011\uffa9\023\uffa9\045\uffa9\054\uffa9" +
    "\055\uffa9\056\uffa9\057\uffa9\001\002\000\020\011\uffa5\023" +
    "\uffa5\045\uffa5\054\uffa5\055\uffa5\056\uffa5\057\uffa5\001\002" +
    "\000\020\011\uffa4\023\uffa4\045\uffa4\054\uffa4\055\uffa4\056" +
    "\uffa4\057\uffa4\001\002\000\020\011\uffa7\023\uffa7\045\uffa7" +
    "\054\uffa7\055\uffa7\056\uffa7\057\uffa7\001\002\000\020\011" +
    "\uffa8\023\uffa8\045\uffa8\054\uffa8\055\uffa8\056\uffa8\057\uffa8" +
    "\001\002\000\020\011\117\023\124\045\130\054\114\055" +
    "\131\056\115\057\075\001\002\000\020\011\uffa6\023\uffa6" +
    "\045\uffa6\054\uffa6\055\uffa6\056\uffa6\057\uffa6\001\002\000" +
    "\010\035\uffb8\036\uffb8\046\uffb8\001\002\000\032\005\uffd3" +
    "\007\uffd3\010\uffd3\012\uffd3\013\uffd3\014\uffd3\016\uffd3\017" +
    "\uffd3\021\uffd3\051\uffd3\052\uffd3\057\uffd3\001\002\000\004" +
    "\042\uffcc\001\002\000\004\042\207\001\002\000\032\005" +
    "\uffd2\007\uffd2\010\uffd2\012\uffd2\013\uffd2\014\uffd2\016\uffd2" +
    "\017\uffd2\021\uffd2\051\uffd2\052\uffd2\057\uffd2\001\002\000" +
    "\020\011\117\023\124\045\130\054\114\055\131\056\115" +
    "\057\075\001\002\000\006\042\213\046\uffc9\001\002\000" +
    "\004\046\215\001\002\000\004\054\214\001\002\000\004" +
    "\046\uffca\001\002\000\004\042\216\001\002\000\032\005" +
    "\uffd0\007\uffd0\010\uffd0\012\uffd0\013\uffd0\014\uffd0\016\uffd0" +
    "\017\uffd0\021\uffd0\051\uffd0\052\uffd0\057\uffd0\001\002\000" +
    "\032\005\uffd7\007\uffd7\010\uffd7\012\uffd7\013\uffd7\014\uffd7" +
    "\016\uffd7\017\uffd7\021\uffd7\051\uffd7\052\uffd7\057\uffd7\001" +
    "\002\000\020\011\117\023\124\045\130\054\114\055\131" +
    "\056\115\057\075\001\002\000\006\036\151\046\222\001" +
    "\002\000\024\005\107\010\077\012\102\013\073\014\103" +
    "\016\106\021\104\051\074\057\075\001\002\000\032\005" +
    "\uffcd\007\224\010\uffcd\012\uffcd\013\uffcd\014\uffcd\016\uffcd" +
    "\017\uffcd\021\uffcd\051\uffcd\052\uffcd\057\uffcd\001\002\000" +
    "\024\005\107\010\077\012\102\013\073\014\103\016\106" +
    "\021\104\051\074\057\075\001\002\000\032\005\uffd6\007" +
    "\uffd6\010\uffd6\012\uffd6\013\uffd6\014\uffd6\016\uffd6\017\uffd6" +
    "\021\uffd6\051\uffd6\052\uffd6\057\uffd6\001\002\000\032\005" +
    "\uffce\007\uffce\010\uffce\012\uffce\013\uffce\014\uffce\016\uffce" +
    "\017\uffce\021\uffce\051\uffce\052\uffce\057\uffce\001\002\000" +
    "\004\042\uffc6\001\002\000\004\042\uffc5\001\002\000\022" +
    "\011\117\023\124\045\130\046\uffc0\054\114\055\131\056" +
    "\115\057\075\001\002\000\020\011\117\023\124\045\130" +
    "\054\114\055\131\056\115\057\075\001\002\000\004\042" +
    "\uffc8\001\002\000\004\046\235\001\002\000\004\042\uffc7" +
    "\001\002\000\026\005\107\010\077\012\102\013\073\014" +
    "\103\016\106\021\104\051\074\052\237\057\075\001\002" +
    "\000\032\005\uffcf\007\uffcf\010\uffcf\012\uffcf\013\uffcf\014" +
    "\uffcf\016\uffcf\017\uffcf\021\uffcf\051\uffcf\052\uffcf\057\uffcf" +
    "\001\002\000\004\057\075\001\002\000\010\044\156\046" +
    "\242\047\154\001\002\000\004\042\243\001\002\000\032" +
    "\005\uffd1\007\uffd1\010\uffd1\012\uffd1\013\uffd1\014\uffd1\016" +
    "\uffd1\017\uffd1\021\uffd1\051\uffd1\052\uffd1\057\uffd1\001\002" +
    "\000\010\043\uffdc\046\uffdc\047\245\001\002\000\004\050" +
    "\246\001\002\000\006\043\uffdb\046\uffdb\001\002\000\010" +
    "\015\055\052\250\057\014\001\002\000\004\002\001\001" +
    "\002\000\006\042\256\057\252\001\002\000\010\042\uffef" +
    "\047\254\057\uffef\001\002\000\006\042\ufff0\057\ufff0\001" +
    "\002\000\004\050\255\001\002\000\006\042\uffee\057\uffee" +
    "\001\002\000\014\006\ufff2\051\ufff2\052\ufff2\053\ufff2\057" +
    "\ufff2\001\002\000\006\042\ufff1\057\ufff1\001\002\000\004" +
    "\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\256\000\004\003\003\001\001\000\002\001\001\000" +
    "\004\004\005\001\001\000\004\005\007\001\001\000\002" +
    "\001\001\000\014\006\012\007\016\013\014\017\015\031" +
    "\010\001\001\000\006\014\250\015\252\001\001\000\004" +
    "\023\246\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\020\035\001\001\000\004\031\021\001\001\000\006\010" +
    "\022\011\024\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\012\026\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\034\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\021\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\031\041\001\001\000\002\001\001\000" +
    "\004\016\043\001\001\000\010\013\046\022\045\031\010" +
    "\001\001\000\004\023\050\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\024\053\025\055" +
    "\031\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\026\062\027\063\030\060\031\061\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\030\065\031\061\001\001\000" +
    "\002\001\001\000\004\016\067\001\001\000\006\013\046" +
    "\031\010\001\001\000\004\032\071\001\001\000\010\033" +
    "\100\037\077\040\075\001\001\000\002\001\001\000\004" +
    "\032\235\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\035\205\040\120\046\204\047\117\050" +
    "\124\051\125\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\033\110\037\077\040\075\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\040\120\043\121\044\126\045\122\046\115\047" +
    "\117\050\124\051\125\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\052\200\001\001\000\004\031\167\001" +
    "\001\000\004\053\145\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\040\120\047\142\050" +
    "\124\051\125\001\001\000\004\054\140\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\040\120\046\131\047" +
    "\117\050\124\051\125\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\040\120\045\134\046" +
    "\115\047\117\050\124\051\125\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\040\120\051\141\001\001\000\002\001\001\000\004" +
    "\053\145\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\040\120\050\146\051\125\001\001\000\004\054\140" +
    "\001\001\000\002\001\001\000\020\040\120\044\151\045" +
    "\122\046\115\047\117\050\124\051\125\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\040\120\046\165\047" +
    "\117\050\124\051\125\001\001\000\020\040\120\041\160" +
    "\042\157\046\161\047\117\050\124\051\125\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\040" +
    "\120\046\164\047\117\050\124\051\125\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\040\120\046\171\047\117\050\124\051\125" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\040\120\046\202\047\117\050" +
    "\124\051\125\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\040\120\046\210\047\117\050\124" +
    "\051\125\001\001\000\004\036\211\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\022\040\120\043" +
    "\220\044\126\045\122\046\115\047\117\050\124\051\125" +
    "\001\001\000\002\001\001\000\010\033\222\037\077\040" +
    "\075\001\001\000\004\034\224\001\001\000\010\033\225" +
    "\037\077\040\075\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\040\120" +
    "\041\233\042\157\046\161\047\117\050\124\051\125\001" +
    "\001\000\014\040\120\046\232\047\117\050\124\051\125" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\033\100\037\077\040\075\001\001\000\002" +
    "\001\001\000\004\040\240\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\024\053\025\055\031" +
    "\051\001\001\000\002\001\001\000\004\015\256\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MJParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MJParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MJParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {

	Symbol s = this.getScanner().next_token();
	if (s != null && s.value != null)
		System.out.println(s.toString() + " " + s.value.toString());
	return s;

    }



	boolean error = false;

	public void report_fatal_error(String message, Object info) throws java.lang.Exception {
		done_parsing();
		report_error(message, info);
	}

	public void syntax_error(Symbol cur_token) {
		report_error("\nSyntax error", cur_token);
	}

	public void unrecovered_syntax_error(Symbol cur_token) throws java.lang.Exception {
		report_fatal_error("Fatal error, parsing cannot be continued", cur_token);
	}

	public void report_error(String message, Object info) {
		error = true;
		StringBuilder msg = new StringBuilder(message); 
		if (info instanceof Symbol)
			msg.append(" on line ").append(((Symbol)info).left);
		System.out.println(msg.toString());
	}

	public void report_info(String message, Object info) {
		StringBuilder msg = new StringBuilder(message); 
		if (info instanceof Symbol)
			msg.append(" on line ").append(((Symbol)info).left);
		System.out.println(msg.toString());
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$MJParser$actions {
  private final MJParser parser;

  /** Constructor */
  CUP$MJParser$actions(MJParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$MJParser$do_action(
    int                        CUP$MJParser$act_num,
    java_cup.runtime.lr_parser CUP$MJParser$parser,
    java.util.Stack            CUP$MJParser$stack,
    int                        CUP$MJParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MJParser$result;

      /* select the action based on the action number */
      switch (CUP$MJParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Mulop ::= MOD 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Mulop ::= DIV 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Mulop ::= MUL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(42/*Mulop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Addop ::= SUB 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Addop ::= ADD 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(41/*Addop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Relop ::= LSEQ 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Relop ::= LS 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Relop ::= GREQ 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Relop ::= GR 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Relop ::= NEQ 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Relop ::= EQ 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(40/*Relop*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Factor ::= LPAREN Expr RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Factor ::= NEW Type LSQUARE Expr RSQUARE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Factor ::= NEW Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Factor ::= BOOL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Factor ::= CHAR 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Factor ::= NUM 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Factor ::= Designator LPAREN ActPars RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Factor ::= Designator 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(39/*Factor*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Term ::= Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Term ::= Term Mulop Factor 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(38/*Term*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ExprList ::= Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*ExprList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ExprList ::= ExprList Addop Term 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(37/*ExprList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Expr ::= SUB ExprList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Expr ::= ExprList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(36/*Expr*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // CondFact ::= Expr Relop Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // CondFact ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(35/*CondFact*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // CondTerm ::= CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // CondTerm ::= CondTerm AND CondFact 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(34/*CondTerm*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Condition ::= CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Condition ::= Condition OR CondTerm 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(33/*Condition*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ActParsList ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*ActParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ActParsList ::= ActParsList COMMA Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(32/*ActParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ActPars ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ActPars ::= ActParsList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(31/*ActPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Designator ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Designator ::= Designator LSQUARE Expr RSQUARE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Designator ::= Designator DOT IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(30/*Designator*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // DesignatorStatement ::= Designator DEC 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // DesignatorStatement ::= Designator INC 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // DesignatorStatement ::= Designator LPAREN ActPars RPAREN 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // DesignatorStatement ::= Designator ASSIGN Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(29/*DesignatorStatement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // PrintOption ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*PrintOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // PrintOption ::= SEMI NUM 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(28/*PrintOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ReturnOption ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ReturnOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ReturnOption ::= Expr 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(27/*ReturnOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ElseOption ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*ElseOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ElseOption ::= ELSE Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(26/*ElseOption*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Statement ::= LBRACE StatementList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Statement ::= PRINT LPAREN Expr PrintOption RPAREN SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Statement ::= READ LPAREN Designator RPAREN SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-4)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // Statement ::= RETURN ReturnOption SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // Statement ::= CONTINUE SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Statement ::= BREAK SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Statement ::= DO Statement WHILE LPAREN Condition RPAREN SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Statement ::= IF LPAREN Condition RPAREN Statement ElseOption 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Statement ::= DesignatorStatement SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(25/*Statement*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // StatementList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // StatementList ::= StatementList Statement 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(24/*StatementList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Type ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(23/*Type*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // FormParsPart ::= Type IDENT LSQUARE RSQUARE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*FormParsPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // FormParsPart ::= Type IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(22/*FormParsPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // FormParsList ::= FormParsPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*FormParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // FormParsList ::= FormParsList COMMA FormParsPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(21/*FormParsList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // FormPars ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // FormPars ::= FormParsList 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(20/*FormPars*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ReturnType ::= VOID 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ReturnType ::= Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(19/*ReturnType*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // MethodDecl ::= ReturnType IDENT LPAREN FormPars RPAREN ListVarDecl LBRACE StatementList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(18/*MethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-8)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // MethodDeclList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // MethodDeclList ::= MethodDeclList MethodDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(17/*MethodDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ClassMethodDecl ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*ClassMethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ClassMethodDecl ::= LBRACE MethodDeclList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(16/*ClassMethodDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ExtendsDecl ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*ExtendsDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ExtendsDecl ::= EXTENDS Type 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(15/*ExtendsDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ClassId ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(14/*ClassId*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ClassDecl ::= CLASS ClassId ExtendsDecl LBRACE ListVarDecl ClassMethodDecl RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(13/*ClassDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-6)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ListVarDecl ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*ListVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ListVarDecl ::= ListVarDecl VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(12/*ListVarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // VarDeclPart ::= IDENT LSQUARE RSQUARE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarDeclPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VarDeclPart ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(11/*VarDeclPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VarDeclList ::= VarDeclPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VarDeclList ::= VarDeclList VarDeclPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(10/*VarDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VarDecl ::= Type VarDeclList SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(9/*VarDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ConstDeclAlt ::= BOOL 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*ConstDeclAlt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // ConstDeclAlt ::= CHAR 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*ConstDeclAlt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // ConstDeclAlt ::= NUM 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(8/*ConstDeclAlt*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ConstDeclPart ::= IDENT ASSIGN ConstDeclAlt 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(7/*ConstDeclPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ConstDeclList ::= ConstDeclPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ConstDeclList ::= ConstDeclList COMMA ConstDeclPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(6/*ConstDeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-2)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ConstDecl ::= CONST Type ConstDeclList SEMI 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(5/*ConstDecl*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-3)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // DeclPart ::= ClassDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*DeclPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // DeclPart ::= VarDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*DeclPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // DeclPart ::= ConstDecl 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(4/*DeclPart*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // DeclList ::= 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*DeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DeclList ::= DeclList DeclPart 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(3/*DeclList*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ProgId ::= IDENT 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(2/*ProgId*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= Program EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).value;
		RESULT = start_val;
              CUP$MJParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$MJParser$parser.done_parsing();
          return CUP$MJParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // Program ::= PROGRAM ProgId DeclList LBRACE MethodDeclList RBRACE 
            {
              Object RESULT = null;

              CUP$MJParser$result = new java_cup.runtime.Symbol(1/*Program*/, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-5)).left, ((java_cup.runtime.Symbol)CUP$MJParser$stack.elementAt(CUP$MJParser$top-0)).right, RESULT);
            }
          return CUP$MJParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

