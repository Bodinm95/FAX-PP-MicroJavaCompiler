program SemanticProgram
	const asd ErrType = 1;					// unknown type error
	const char CHAR = 'A';
	const int ErrNum = 'A', NUM = 5;		// int type error
	const bool BOOL = true;
	const int ErrBool = true;	// bool type error
	const bool BOOL = false;				// already defined error

	char charVar;
	bool boolVar;
	int num, intVar;
	int intVar; 	// already defined error
	int arr[];

	class ExtendsErr extends int { 	// extends class type error
		int A, A;
		{
			int error(int err, int err) { }
		}
	}
	class SemTest {
		int fieldNum;
		bool fieldFlag;
		{
			void sum(int a, int b) { }

			int vec_sum(int v[], int s) { }
		}
	}
	
	class Child extends SemTest { }
{
	void main() 
		int mainVar;
		int array[];
	{ 
		mainVar = new asdasS;	// new type error
		mainVar = new int;			// not class type error
		mainVar = new SemTest;
		array = new int[10];
		mainVar = new int['A'];		// array size not int error
		
		mainVar = - (10 + 'A' * 10);	// expression type error
		
		if ('A' > 3) return;	// incompatible comparison types
		
		if ( new int[5] >= new int[10]) return;	// invalid relational operator
	}
}